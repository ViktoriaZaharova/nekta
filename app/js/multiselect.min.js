var bodyClickEvent=new Event("body-click",{bubbles:true});document.body.addEventListener("click",function(){document.body.dispatchEvent(bodyClickEvent)});function GMultiSelect(selector,options){this._options={};this._options.applyText="Apply";this._options.resetText="Reset";Object.assign(this._options,options);this._model=[];this._init=function(){if(this._elem.length){this._model=[];this._elem.forEach(function(elem,index){if(elem.nodeName==="SELECT"){var multiselect=this._addLayout(elem);var oldValue=[];for(var i=0;i<elem.options.length;i++){elem.options[i].selected&&oldValue.push(elem.options[i].value)}var elemModel={select:elem,options:elem.options,elem:multiselect,elemOptions:multiselect.querySelectorAll(".g-select-multiple__option"),oldValue:JSON.stringify(oldValue)};this._model.push(elemModel);elemModel.elem.querySelector(".g-select-multiple__dropdown").addEventListener("click",this._optionClicker.bind(this,elemModel));elemModel.elem.querySelector(".g-select-multiple__input").addEventListener("click",this._inputClicker.bind(this,elemModel));document.addEventListener("body-click",function(e){e.stopPropagation();this._close.bind(this,elemModel)()}.bind(this));if(elem.getAttribute("multiple")===null){elem.setAttribute("multiple",true);this._reset(elemModel)}this._checkAllOptions(elemModel);this._processValue(elemModel)}}.bind(this))}};this._generateOption=function(option){return'<div class="g-select-multiple__option" data-value="'+option.value+'">\n                            <div class="g-select-multiple__check">\n                                <div class="g-select-multiple__check-icon">\n                                    <i class="icon-check"></i>\n                                </div>\n                            </div>\n                            <div class="g-select-multiple__uncheck">\n                                <i class="icon-square"></i>\n                            </div>\n                            '+option.text+"\n                        </div>"};this._inputClicker=function(elemModel,e){e.stopPropagation();var target=e.target;if(target.classList.contains("g-select-multiple__remove")){this._reset(elemModel);this._processValue(elemModel)}else{if(elemModel.elem.classList.contains("-active")){elemModel.elem.classList.remove("-active")}else{document.body.dispatchEvent(bodyClickEvent);elemModel.elem.classList.add("-active")}}};this._optionClicker=function(elemModel,e){e.stopPropagation();var target=e.target;if(target.classList.contains("g-select-multiple__option")){this._checkOption(elemModel,target);this._options.hideButtons===true&&elemModel.select.dispatchEvent(new Event("change"));this._processValue(elemModel);return}if(target.classList.contains("g-select-multiple__apply")){this._close(elemModel);typeof this._options.apllyFunction==="function"&&this._options.apllyFunction();return}if(target.classList.contains("g-select-multiple__reset")){this._reset(elemModel);this._close(elemModel);typeof this._options.resetFunction==="function"&&this._options.resetFunction();return}var closest=target.closest(".g-select-multiple__option");if(closest){this._checkOption(elemModel,closest);this._options.hideButtons===true&&elemModel.select.dispatchEvent(new Event("change"));this._processValue(elemModel)}};this._processValue=function(elemModel){var selected=elemModel.select.querySelectorAll("option:checked");var input=elemModel.elem.querySelector(".g-select-multiple__selection");if(selected.length){elemModel.elem.classList.add("-selected");elemModel.elem.querySelector(".g-select-multiple__remove").style.display="inline-block";if(selected.length===1){input.childNodes[0].nodeValue=selected[0].text;elemModel.elem.querySelector(".g-select-multiple__col").innerText=""}else{var placeholder=this._options.placeholderSelected||this._options.placeholder;input.childNodes[0].nodeValue=placeholder||"";input.setAttribute("title",placeholder||"");elemModel.elem.querySelector(".g-select-multiple__col").innerText=": "+selected.length}}else{elemModel.elem.querySelector(".g-select-multiple__remove").style.display="none";elemModel.elem.querySelector(".g-select-multiple__col").innerText="";input.childNodes[0].nodeValue=this._options.placeholder||"";input.setAttribute("title",this._options.placeholder||"");elemModel.elem.classList.remove("-selected")}};this._close=function(elemModel){if(elemModel.elem.classList.contains("-active")){elemModel.elem.classList.remove("-active");var current=[];for(var i=0;i<elemModel.options.length;i++){elemModel.options[i].selected&&current.push(elemModel.options[i].value)}current=JSON.stringify(current);if(!this._options.hideButtons&&elemModel.oldValue!==current){elemModel.oldValue=current;elemModel.select.dispatchEvent(new Event("change"))}}};this._reset=function(elemModel){for(var i=0;i<elemModel.options.length;i++){elemModel.options[i].selected=false}elemModel.elemOptions.forEach(function(item){item.classList.remove("-active")});elemModel.elem.classList.remove("-active");elemModel.elem.querySelector(".g-select-multiple__remove").style.display="none";elemModel.elem.querySelector(".g-select-multiple__col").innerText="";var input=elemModel.elem.querySelector(".g-select-multiple__selection");input.childNodes[0].nodeValue=this._options.placeholder||"";input.setAttribute("title",this._options.placeholder||"");elemModel.select.dispatchEvent(new Event("change"))};this._checkOption=function(elemModel,optionElem){var value=optionElem.getAttribute("data-value");var options=elemModel.options;for(var i=0;i<options.length;i++){if(options[i].value===value){options[i].selected=!options[i].selected;options[i].selected?optionElem.classList.add("-active"):optionElem.classList.remove("-active")}}};this._checkAllOptions=function(elemModel){var options=elemModel.options;elemModel.elemOptions.forEach(function(elem){var value=elem.getAttribute("data-value");for(var i=0;i<options.length;i++){if(options[i].value===value){options[i].selected?elem.classList.add("-active"):elem.classList.remove("-active")}}})};this._addLayout=function(elem){elem.style.display="none";var options=elem.options;var optionsLayout="";for(var i=0;i<options.length;i++){optionsLayout+=this._generateOption(options[i])}var buttonLine='<div class="g-select-multiple__buttons">\n                            <button class="g-select-multiple__apply">'+this._options.applyText+'</button>\n                            <button class="g-select-multiple__reset -light">'+this._options.resetText+"</button>\n                        </div>";this._options.hideButtons===true&&(buttonLine="");var id="gsm_"+Math.random().toString(36).substring(5);var layout='<div class="g-select-multiple" id="'+id+'">\n                    <div class="g-select-multiple__input">\n                        <div class="g-select-multiple__selection">\n                            '+(this._options.placeholder||"")+'\n                        </div>\n                        <div class="g-select-multiple__col"></div>\n                        <div class="g-select-multiple__icons">\n                            <i class="g-select-multiple__remove icon-x"></i>\n                            <i class="g-select-multiple__down mdi icon-chevron-down"></i>\n                        </div>\n                    </div>\n                    <div class="g-select-multiple__dropdown">\n                        <div class="g-select-multiple__option-container">\n                            '+optionsLayout+"\n                        </div>\n                        "+buttonLine+"\n                    </div>\n                </div>";return elem.parentNode.insertBefore((new DOMParser).parseFromString(layout,"text/html").body.firstChild,elem)};this.set=function(selector,options){this._elem=document.querySelectorAll(selector);this._init();Object.assign(this._options,options)};if(selector){this._elem=document.querySelectorAll(selector);this._init()}}